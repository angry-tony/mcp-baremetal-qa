classes:
- system.linux.system.repo.docker
- system.kubernetes.pool.cluster
- system.salt.minion.cert.k8s_client
- system.salt.minion.cert.etcd_client
- cluster.physical-mcp11-k8s-contrail.infra
- cluster.physical-mcp11-k8s-contrail.opencontrail.compute
parameters:
  _param:
    kubernetes_hyperkube_image: docker-prod-virtual.sandbox.mirantis.net/mirantis/kubernetes/hyperkube-amd64:v1.6.2-2
  linux:
    network:
      interface:
        ens4:
          enabled: true
          type: eth
          proto: manual
        vhost0:
          enabled: true
          type: eth
          mtu: 1500
          address: ${_param:single_address}
          netmask: '255.255.255.0'
          pre_up_cmds:
          - /usr/lib/contrail/if-vhost0
          use_interfaces:
          - ens4
  docker:
    host:
      pkgs:
        - docker-engine=1.12.6-0~ubuntu-xenial
        - python-docker
  kubernetes:
    pool:
      network:
        engine: opencontrail
        opencontrail:
          address: ${_param:opencontrail_control_address}
        etcd:
          ssl:
            enabled: true
        image: docker-prod-virtual.sandbox.mirantis.net/mirantis/projectcalico/calico/node:latest
        calicoctl:
          image: docker-prod-virtual.sandbox.mirantis.net/mirantis/projectcalico/calico/ctl:latest
        cni:
          image: docker-prod-virtual.sandbox.mirantis.net/mirantis/projectcalico/calico/cni:latest
    common:
      hyperkube:
        image: ${_param:kubernetes_hyperkube_image}
